name: 'Backend CI'
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd starter/backend
        python -m pip install --upgrade pip
        pip install pipenv --user
        pipenv install

    - name: Lint
      run: |
        cd starter/backend
        pipenv install flake8
        pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd starter/backend
        python -m pip install --upgrade pip
        pip install pipenv --user
        pipenv install

    - name: Test
      run: |
        cd starter/backend && pipenv run test

  build-and-deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
          cd starter/backend
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    
    - name: Deploy to cluster
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd starter/backend/k8s
        aws eks update-kubeconfig 
        kustomize edit set image backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
        kustomize build | kubectl apply -f -